import { NavTabs } from '@/components/Tabs/nav_tabs';
import DrawPalette, { pathSvg } from '@/pages/Tools/DrawPalette';
import React, { useEffect, useState } from 'react';

const baseSkColor = [
  '#00000000',
  '#033fff',
  '#f3ff00',
  '#d10707',
  '#ff8806',
  '#206606',

  '#3d3d3d',
  '#f5f3db',
  '#777',
];

const SimpleSkDraw = () => {
  const skPoints = [
    {
      d: 'M128.839 19.1464 128.839 37.6453 112.814 46.9012 128.839 19.1464Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M128.839 0.640989 128.839 19.1464 112.814 9.89047 128.839 0.640989Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M97.3455 19.2499 129.579 19.2499 129.579 37.8616 97.3455 37.8616Z',
      transform: 'matrix(0.497144 -0.873106 0.86503 0.501785 32.0724 112.942)',
    },
    {
      d: 'M112.814 9.89047 96.7894 37.6453 96.7894 19.1464 112.814 9.89047Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M112.814 46.9012 96.7894 56.1507 96.7894 37.6453 112.814 46.9012Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M96.7894 37.6453 96.7894 56.1507 80.7647 65.4001 96.7894 37.6453Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M96.7894 19.1464 96.7894 37.6453 80.7647 28.3958 96.7894 19.1464Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M65.1119 37.8616 97.3455 37.8616 97.3455 56.4733 65.1119 56.4733Z',
      transform: 'matrix(0.497144 -0.873106 0.86503 0.501785 0.0293102 94.2641)',
    },
    {
      d: 'M96.7894 19.1464 80.7647 28.3958 80.7647 9.89047 96.7894 19.1464Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M48.7152 9.89047 80.7647 9.89047 80.7647 28.3958 48.7152 28.3958Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M80.7647 28.3958 64.7399 56.1507 64.7399 37.6453 80.7647 28.3958Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M80.7647 9.89047 48.7152 9.89047 64.7399 0.640989 80.7647 9.89047Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M80.7647 28.3958 64.7399 37.6453 48.7152 28.3958 80.7647 28.3958Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M80.7647 65.4001 64.7399 74.656 64.7399 56.1507 80.7647 65.4001Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M64.7399 56.1507 64.7399 74.656 48.7152 65.4001 64.7399 56.1507Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M64.7399 37.6453 64.7399 56.1507 48.7152 28.3958 64.7399 37.6453Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M39.5581 30.9488 58.1068 30.9488 58.1068 63.0733 39.5581 63.0733Z',
      transform: 'matrix(0.864002 -0.503489 0.498832 0.872068 -16.6621 30.9253)',
    },
    {
      d: 'M48.7152 9.89047 48.7152 28.3958 32.6905 19.1464 48.7152 9.89047Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M32.6905 37.6453 48.7152 65.4001 32.6905 56.1507 32.6905 37.6453Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M48.7152 28.3958 32.6905 37.6453 32.6905 19.1464 48.7152 28.3958Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M32.6905 37.6453 32.6905 56.1507 16.6657 46.9012 32.6905 37.6453Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M32.6905 19.1464 32.6905 37.6453 16.6657 9.89047 32.6905 19.1464Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M7.42719 12.4001 25.9759 12.4001 25.9759 44.5246 7.42719 44.5246Z',
      transform: 'matrix(0.864002 -0.503489 0.498832 0.872068 -11.7072 12.2537)',
    },
    {
      d: 'M0.640989 19.1464 16.6657 46.9012 0.640989 37.6453 0.640989 19.1464Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M16.6657 9.89047 0.640989 19.1464 0.640989 0.640989 16.6657 9.89047Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M80.7647 9.89047 64.7399 0.640989 48.7152 9.89047',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M96.7894 19.1464 80.7647 9.89047',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M48.7152 9.89047 32.6905 19.1464',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M48.7152 9.89047 80.7647 9.89047 80.7647 28.3958 48.7152 28.3958Z',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M80.7647 28.3958 64.7399 37.6453',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M96.7894 19.1464 80.7647 28.3958',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M64.7399 74.656 80.7647 65.4001',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M80.7647 65.4001 96.7894 56.1507',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M65.1119 37.8616 97.3455 37.8616 97.3455 56.4733 65.1119 56.4733Z',
      transform: 'matrix(0.497144 -0.873106 0.86503 0.501785 0.0293102 94.2641)',
    },
    {
      d: 'M48.7152 28.3958 32.6905 19.1464',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M64.7399 56.1507 64.7399 37.6453 48.7152 28.3958',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M32.6905 56.1507 48.7152 65.4001',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M48.7152 65.4001 64.7399 74.656 64.7399 56.1507',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M39.5581 30.9488 58.1068 30.9488 58.1068 63.0733 39.5581 63.0733Z',
      transform: 'matrix(0.864002 -0.503489 0.498832 0.872068 -16.6621 30.9253)',
    },
    {
      d: 'M16.6657 9.89047 0.640989 0.640989 0.640989 19.1464',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M32.6905 37.6453 32.6905 19.1464 16.6657 9.89047',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M0.640989 19.1464 0.640989 37.6453 16.6657 46.9012',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M16.6657 46.9012 32.6905 56.1507 32.6905 37.6453',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M7.42719 12.4001 25.9759 12.4001 25.9759 44.5246 7.42719 44.5246Z',
      transform: 'matrix(0.864002 -0.503489 0.498832 0.872068 -11.7072 12.2537)',
    },
    {
      d: 'M112.814 9.89047 96.7894 19.1464 96.7894 37.6453',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M128.839 19.1464 128.839 0.640989 112.814 9.89047',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M96.7894 37.6453 96.7894 56.1507 112.814 46.9012',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M112.814 46.9012 128.839 37.6453 128.839 19.1464',
      transform: 'matrix(1 0 0 1.00934 0.260066 0)',
    },
    {
      d: 'M97.3455 19.2499 129.579 19.2499 129.579 37.8616 97.3455 37.8616Z',
      transform: 'matrix(0.497144 -0.873106 0.86503 0.501785 32.0724 112.942)',
    },
  ];

  const [skPointsM, setSkPointsM] = useState<pathSvg[]>([]);

  useEffect(() => {
    const v = [];
    for (let i = 0; i < skPoints.length; i++) {
      v.push({
        key: 'simple_sk' + i,
        d: skPoints[i].d,
        transformStr: skPoints[i].transform,
      });
    }
    setSkPointsM(v);
  }, []);

  return (
    <div>
      <DrawPalette
        svgPoints={skPointsM}
        presetColors={baseSkColor}
        storageKey={'simpleSkDraw'}
        viewBox={'0 0 130 76'}
        strokeWidthNum={0.2}
      />
    </div>
  );
};

const SKDraw: React.FC = () => {
  const items = [
    {
      key: 'simple_sk',
      label: '展开图',
      children: SimpleSkDraw(),
    },
  ];

  return (
    <>
      <NavTabs
        type="line"
        items={items}
        tabsKey="sk_draw_tabs"
        indicator={{ size: (origin: number) => origin - 20, align: 'center' }}
      />
    </>
  );
};

export default SKDraw;
